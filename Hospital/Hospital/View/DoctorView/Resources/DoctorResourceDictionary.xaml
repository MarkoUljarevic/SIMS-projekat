<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    
    
    <!-- Default button template -->
    <ControlTemplate TargetType="Button" x:Key="ButtonTemplate">
        <Border BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
    </ControlTemplate>
    
    <Style TargetType="Button" x:Key="DefaultButton">
        <Setter Property="Background" Value="#0F5A96"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Padding" Value="0 3 0 0"/>
        <Setter Property="Foreground" Value="#95D8EB"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="6" />
            </Style>
        </Style.Resources>
    </Style>
    
    <!-- Menu buttons -->
    <Style TargetType="Button" x:Key="MenuButtonStyle">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Width" Value="324"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Background" Value="#0F5A96"/>
        <Setter Property="TextElement.FontFamily" Value="Roboto"/>
        <Setter Property="Foreground" Value="#95D8EB"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="6" />
            </Style>
        </Style.Resources>
    </Style>
    
    <!-- Main window Background -->
    <Style TargetType="Window" x:Key="MainWindowStyle">
        <Setter Property="Background" Value="#0076BE"/>
    </Style>
    
    <!-- Menu panel background -->
    <Style TargetType="Rectangle" x:Key="MenuRectangleStyle">
        <Setter Property="Height" Value="768"/>
        <Setter Property="Width" Value="324"/>
        <Setter Property="Fill" Value="#073F77"/>
    </Style>
    
    <!-- Checkup buttons -->
    <Style TargetType="Button" x:Key="CheckupButton">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Background" Value="#95D8EB"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="BorderBrush" Value="#0F5A96"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="6" />
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Big Checkup button -->
    <Style TargetType="Button" BasedOn="{StaticResource CheckupButton}" x:Key="BigCheckupButton">
        <Setter Property="Width" Value="600"/>
    </Style>
    
    <!-- Diagnosis Rectangle -->
    <Style TargetType="Rectangle" x:Key="CheckupRectangleStyle">
        <Setter Property="Height" Value="170"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Fill" Value="#95D8EB"/>
        <Setter Property="Stroke" Value="#0F5A96"/>
        <Setter Property="Clip">
            <Setter.Value>
                <RectangleGeometry Rect="0, 0, 600, 170" RadiusX="8" RadiusY="8"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Header Border -->
    <Style TargetType="Border" x:Key="HeaderStyle">
        <Setter Property="Background" Value="#95D8EB"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#0F5A96"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    
    <!-- Diagnosis TextBox -->
    <Style TargetType="TextBox" x:Key="DiagnosisTextStyle">
        <Setter Property="Height" Value="125"/>
        <Setter Property="Width" Value="600"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="Roboto"/>
    </Style>
    
    <!-- Label -->
    <Style TargetType="Label" x:Key="LabelStyle">
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    
    <!-- Clock Label -->
    <Style TargetType="Label" x:Key="ClockLabelStyle">
        <Setter Property="Foreground" Value="#95D8EB"/>
    </Style>
    
    <!-- TextBlock  -->
    <Style TargetType="TextBlock" x:Key="TextBlockStyle">
        <Setter Property="Foreground" Value="#95D8EB"/>
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>
    
    <!-- ListBox -->
    <Style TargetType="ListBox" x:Key="ListBoxStyle">
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <!-- Header Rectangle -->
    <Style TargetType="Rectangle" x:Key="HeaderRectangleStyle">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="700"/>
        <Setter Property="Fill" Value="#95D8EB"/>
        <Setter Property="Stroke" Value="#0F5A96"/>
        <Setter Property="Clip">
            <Setter.Value>
                <RectangleGeometry Rect="0, 0, 700, 40" RadiusX="8" RadiusY="8"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- CustomTimeSpanUpDown -->
    <Style TargetType="xctk:TimeSpanUpDown" x:Key="TimeSpanUpDownStyle">
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <!-- TimePicker -->
    <Style TargetType="xctk:TimePicker" x:Key="TimePickerStyle">
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <!-- DatePicker -->
    <Style TargetType="DatePicker" x:Key="DatePickerStyle">
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                            <Grid>
                                <Grid.Resources>
                                    <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="WatermarkStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unwatermarked"/>
                                        <VisualState x:Name="Watermarked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                    <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="0"/>
                                        <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="0">
                                            <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                        </Border>
                                        <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
            </Setter>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="12 0 0 0"/>
            </Style>
        </Style.Resources> 
        <Setter Property="Foreground" Value="#0F5A96"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    <!-- Border with corner radius -->
    <Style TargetType="Border" x:Key="BorderStyle">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#0F5A96"/>
        <Setter Property="Background" Value="#95D8EB"/>
    </Style>
    
    <Style TargetType="Border" x:Key="HeaderBorderStyle">
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#0F5A96"/>
        <Setter Property="Background" Value="#95D8EB"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="700"/>
    </Style>
    
</ResourceDictionary>